/** THIS FILE IS AUTOGENERATED, DO NOT EDIT IT!
 * instead, edit `.graphql` files and run graphql-codegen script
 * for this file to be re-created */

import * as Types from '../../graphql/types.generated';

import { api } from '../../graphql/api';
export type UpdatePostMutationVariables = Types.Exact<{
  id: Types.Scalars['ID'];
  title: Types.Scalars['String'];
  imageUrl: Types.Scalars['String'];
  content: Types.Scalars['String'];
}>;


export type UpdatePostMutation = { __typename?: 'RootMutation', updatePost: { __typename?: 'Post', _id: string, title: string, imageUrl: string, content: string, createdAt: string, updatedAt: string, creator: { __typename?: 'User', name: string } } };


export const UpdatePostDocument = `
    mutation UpdatePost($id: ID!, $title: String!, $imageUrl: String!, $content: String!) {
  updatePost(
    id: $id
    postInput: {title: $title, imageUrl: $imageUrl, content: $content}
  ) {
    _id
    title
    imageUrl
    content
    creator {
      name
    }
    createdAt
    updatedAt
  }
}
    `;

const injectedRtkApi = api.injectEndpoints({
  endpoints: (build) => ({
    UpdatePost: build.mutation<UpdatePostMutation, UpdatePostMutationVariables>({
      query: (variables) => ({ document: UpdatePostDocument, variables })
    }),
  }),
});

export { injectedRtkApi as api };
export const { useUpdatePostMutation } = injectedRtkApi;

