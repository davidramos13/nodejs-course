/** THIS FILE IS AUTOGENERATED, DO NOT EDIT IT!
 * instead, edit `.graphql` files and run graphql-codegen script
 * for this file to be re-created */

import * as Types from '../../graphql/types.generated';

import { api } from '../../graphql/api';
export type GetPostsQueryVariables = Types.Exact<{
  page: Types.Scalars['Int'];
}>;


export type GetPostsQuery = { __typename?: 'RootQuery', posts: { __typename?: 'PostData', totalItems: number, posts: Array<{ __typename?: 'Post', _id: string, title: string, content: string, imageUrl: string, createdAt: string, updatedAt: string, creator: { __typename?: 'User', name: string } }> } };


export const GetPostsDocument = `
    query GetPosts($page: Int!) {
  posts(page: $page) {
    posts {
      _id
      title
      content
      imageUrl
      createdAt
      updatedAt
      creator {
        name
      }
    }
    totalItems
  }
}
    `;

const injectedRtkApi = api.injectEndpoints({
  endpoints: (build) => ({
    GetPosts: build.query<GetPostsQuery, GetPostsQueryVariables>({
      query: (variables) => ({ document: GetPostsDocument, variables })
    }),
  }),
});

export { injectedRtkApi as api };
export const { useGetPostsQuery, useLazyGetPostsQuery } = injectedRtkApi;

